{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "### Importación de datos\n",
        "\n"
      ],
      "metadata": {
        "id": "RhEdWd9YUR6H"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 329
        },
        "id": "T3EvaeQ_INIL",
        "outputId": "625d21e9-dad7-4421-a2d3-b60a7a15aba9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Producto Categoría del Producto    Precio  Costo de envío  \\\n",
              "0  Asistente virtual           Electrónicos  164300.0          6900.0   \n",
              "1    Mesa de comedor                Muebles  192300.0          8400.0   \n",
              "2      Juego de mesa               Juguetes  209600.0         15900.0   \n",
              "3         Microondas      Electrodomésticos  757500.0         41000.0   \n",
              "4   Silla de oficina                Muebles  335200.0         20200.0   \n",
              "\n",
              "  Fecha de Compra         Vendedor Lugar de Compra  Calificación  \\\n",
              "0      16/01/2021      Pedro Gomez          Bogotá             4   \n",
              "1      18/05/2022  Beatriz Morales        Medellín             1   \n",
              "2      15/03/2021   Juan Fernandez       Cartagena             1   \n",
              "3      03/05/2022   Juan Fernandez            Cali             4   \n",
              "4      07/11/2020    Maria Alfonso        Medellín             5   \n",
              "\n",
              "       Método de pago  Cantidad de cuotas       lat       lon  \n",
              "0  Tarjeta de crédito                   8   4.60971 -74.08175  \n",
              "1  Tarjeta de crédito                   4   6.25184 -75.56359  \n",
              "2  Tarjeta de crédito                   1  10.39972 -75.51444  \n",
              "3               Nequi                   1   3.43722 -76.52250  \n",
              "4               Nequi                   1   6.25184 -75.56359  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4d1165b1-b7e3-411b-bcb9-11c8a40cc483\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Producto</th>\n",
              "      <th>Categoría del Producto</th>\n",
              "      <th>Precio</th>\n",
              "      <th>Costo de envío</th>\n",
              "      <th>Fecha de Compra</th>\n",
              "      <th>Vendedor</th>\n",
              "      <th>Lugar de Compra</th>\n",
              "      <th>Calificación</th>\n",
              "      <th>Método de pago</th>\n",
              "      <th>Cantidad de cuotas</th>\n",
              "      <th>lat</th>\n",
              "      <th>lon</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Asistente virtual</td>\n",
              "      <td>Electrónicos</td>\n",
              "      <td>164300.0</td>\n",
              "      <td>6900.0</td>\n",
              "      <td>16/01/2021</td>\n",
              "      <td>Pedro Gomez</td>\n",
              "      <td>Bogotá</td>\n",
              "      <td>4</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>8</td>\n",
              "      <td>4.60971</td>\n",
              "      <td>-74.08175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Mesa de comedor</td>\n",
              "      <td>Muebles</td>\n",
              "      <td>192300.0</td>\n",
              "      <td>8400.0</td>\n",
              "      <td>18/05/2022</td>\n",
              "      <td>Beatriz Morales</td>\n",
              "      <td>Medellín</td>\n",
              "      <td>1</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>4</td>\n",
              "      <td>6.25184</td>\n",
              "      <td>-75.56359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Juego de mesa</td>\n",
              "      <td>Juguetes</td>\n",
              "      <td>209600.0</td>\n",
              "      <td>15900.0</td>\n",
              "      <td>15/03/2021</td>\n",
              "      <td>Juan Fernandez</td>\n",
              "      <td>Cartagena</td>\n",
              "      <td>1</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>1</td>\n",
              "      <td>10.39972</td>\n",
              "      <td>-75.51444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Microondas</td>\n",
              "      <td>Electrodomésticos</td>\n",
              "      <td>757500.0</td>\n",
              "      <td>41000.0</td>\n",
              "      <td>03/05/2022</td>\n",
              "      <td>Juan Fernandez</td>\n",
              "      <td>Cali</td>\n",
              "      <td>4</td>\n",
              "      <td>Nequi</td>\n",
              "      <td>1</td>\n",
              "      <td>3.43722</td>\n",
              "      <td>-76.52250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Silla de oficina</td>\n",
              "      <td>Muebles</td>\n",
              "      <td>335200.0</td>\n",
              "      <td>20200.0</td>\n",
              "      <td>07/11/2020</td>\n",
              "      <td>Maria Alfonso</td>\n",
              "      <td>Medellín</td>\n",
              "      <td>5</td>\n",
              "      <td>Nequi</td>\n",
              "      <td>1</td>\n",
              "      <td>6.25184</td>\n",
              "      <td>-75.56359</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d1165b1-b7e3-411b-bcb9-11c8a40cc483')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4d1165b1-b7e3-411b-bcb9-11c8a40cc483 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4d1165b1-b7e3-411b-bcb9-11c8a40cc483');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-56496093-80ca-46d3-8c82-dcbdcb972038\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56496093-80ca-46d3-8c82-dcbdcb972038')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-56496093-80ca-46d3-8c82-dcbdcb972038 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tienda",
              "summary": "{\n  \"name\": \"tienda\",\n  \"rows\": 2359,\n  \"fields\": [\n    {\n      \"column\": \"Producto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Guitarra ac\\u00fastica\",\n          \"Bal\\u00f3n de baloncesto\",\n          \"Smartwatch\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Categor\\u00eda del Producto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Muebles\",\n          \"Deportes y diversi\\u00f3n\",\n          \"Electr\\u00f3nicos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 614686.7653873172,\n        \"min\": 7600.0,\n        \"max\": 2977000.0,\n        \"num_unique_values\": 1937,\n        \"samples\": [\n          2499400.0,\n          14800.0,\n          80500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Costo de env\\u00edo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32860.0017825605,\n        \"min\": 0.0,\n        \"max\": 160800.0,\n        \"num_unique_values\": 753,\n        \"samples\": [\n          117800.0,\n          54700.0,\n          45600.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fecha de Compra\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1018,\n        \"samples\": [\n          \"15/09/2022\",\n          \"03/06/2020\",\n          \"06/11/2021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vendedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Juliana Costa\",\n          \"Mariana Herrera\",\n          \"Pedro Gomez\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lugar de Compra\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Bogot\\u00e1\",\n          \"Pereira\",\n          \"Neiva\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calificaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          2,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\\u00e9todo de pago\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Nequi\",\n          \"Tarjeta de d\\u00e9bito\",\n          \"Tarjeta de cr\\u00e9dito\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cantidad de cuotas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 24,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          7,\n          14,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.2874452492678627,\n        \"min\": -4.21528,\n        \"max\": 11.54444,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          4.60971,\n          4.81333,\n          2.9273\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2178272727088486,\n        \"min\": -77.28111,\n        \"max\": -67.9239,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          -74.08175,\n          -75.69611,\n          -75.28189\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 1
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "url = \"https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv\"\n",
        "url2 = \"https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv\"\n",
        "url3 = \"https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv\"\n",
        "url4 = \"https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv\"\n",
        "\n",
        "tienda = pd.read_csv(url)\n",
        "tienda2 = pd.read_csv(url2)\n",
        "tienda3 = pd.read_csv(url3)\n",
        "tienda4 = pd.read_csv(url4)\n",
        "\n",
        "tienda.head()"
      ]
    },
    {
      "source": [
        "# @title Precio\n",
        "\n",
        "from matplotlib import pyplot as plt\n",
        "tienda['Precio'].plot(kind='hist', bins=20, title='Precio')\n",
        "plt.gca().spines[['top', 'right',]].set_visible(False)"
      ],
      "cell_type": "code",
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "kdbscttBGYkI",
        "outputId": "1368ba74-d19f-4e56-eab5-0d5cb69ff9dd"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#1. Análisis de facturación\n",
        "\n"
      ],
      "metadata": {
        "id": "X62IW3KFUIYm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "tienda"
      ],
      "metadata": {
        "id": "xykobSftV64I",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 615
        },
        "outputId": "a4870acd-22f4-46df-afa6-9c2c2f56b6d7"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Producto Categoría del Producto     Precio  Costo de envío  \\\n",
              "0     Asistente virtual           Electrónicos   164300.0          6900.0   \n",
              "1       Mesa de comedor                Muebles   192300.0          8400.0   \n",
              "2         Juego de mesa               Juguetes   209600.0         15900.0   \n",
              "3            Microondas      Electrodomésticos   757500.0         41000.0   \n",
              "4      Silla de oficina                Muebles   335200.0         20200.0   \n",
              "...                 ...                    ...        ...             ...   \n",
              "2354          Iphone 15           Electrónicos  1284400.0         66600.0   \n",
              "2355          Impresora           Electrónicos   282800.0         15300.0   \n",
              "2356      Juego de mesa               Juguetes   122900.0          7200.0   \n",
              "2357           Cama box                Muebles   691300.0         35000.0   \n",
              "2358         Smartwatch           Electrónicos   195000.0          8600.0   \n",
              "\n",
              "     Fecha de Compra         Vendedor Lugar de Compra  Calificación  \\\n",
              "0         16/01/2021      Pedro Gomez          Bogotá             4   \n",
              "1         18/05/2022  Beatriz Morales        Medellín             1   \n",
              "2         15/03/2021   Juan Fernandez       Cartagena             1   \n",
              "3         03/05/2022   Juan Fernandez            Cali             4   \n",
              "4         07/11/2020    Maria Alfonso        Medellín             5   \n",
              "...              ...              ...             ...           ...   \n",
              "2354      15/11/2021  Izabela de León        Medellín             1   \n",
              "2355      18/03/2023    Lucas Olivera          Bogotá             5   \n",
              "2356      06/07/2021    Lucas Olivera            Cali             5   \n",
              "2357      02/05/2022      Pedro Gomez           Pasto             1   \n",
              "2358      18/06/2022    Felipe Santos            Cali             4   \n",
              "\n",
              "          Método de pago  Cantidad de cuotas       lat       lon  \n",
              "0     Tarjeta de crédito                   8   4.60971 -74.08175  \n",
              "1     Tarjeta de crédito                   4   6.25184 -75.56359  \n",
              "2     Tarjeta de crédito                   1  10.39972 -75.51444  \n",
              "3                  Nequi                   1   3.43722 -76.52250  \n",
              "4                  Nequi                   1   6.25184 -75.56359  \n",
              "...                  ...                 ...       ...       ...  \n",
              "2354               Nequi                   1   6.25184 -75.56359  \n",
              "2355               Nequi                   1   4.60971 -74.08175  \n",
              "2356  Tarjeta de crédito                   4   3.43722 -76.52250  \n",
              "2357  Tarjeta de crédito                   2   1.21361 -77.28111  \n",
              "2358  Tarjeta de crédito                   1   3.43722 -76.52250  \n",
              "\n",
              "[2359 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5c1c54cb-84c9-4060-8eda-8d054e0e6d64\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Producto</th>\n",
              "      <th>Categoría del Producto</th>\n",
              "      <th>Precio</th>\n",
              "      <th>Costo de envío</th>\n",
              "      <th>Fecha de Compra</th>\n",
              "      <th>Vendedor</th>\n",
              "      <th>Lugar de Compra</th>\n",
              "      <th>Calificación</th>\n",
              "      <th>Método de pago</th>\n",
              "      <th>Cantidad de cuotas</th>\n",
              "      <th>lat</th>\n",
              "      <th>lon</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Asistente virtual</td>\n",
              "      <td>Electrónicos</td>\n",
              "      <td>164300.0</td>\n",
              "      <td>6900.0</td>\n",
              "      <td>16/01/2021</td>\n",
              "      <td>Pedro Gomez</td>\n",
              "      <td>Bogotá</td>\n",
              "      <td>4</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>8</td>\n",
              "      <td>4.60971</td>\n",
              "      <td>-74.08175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Mesa de comedor</td>\n",
              "      <td>Muebles</td>\n",
              "      <td>192300.0</td>\n",
              "      <td>8400.0</td>\n",
              "      <td>18/05/2022</td>\n",
              "      <td>Beatriz Morales</td>\n",
              "      <td>Medellín</td>\n",
              "      <td>1</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>4</td>\n",
              "      <td>6.25184</td>\n",
              "      <td>-75.56359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Juego de mesa</td>\n",
              "      <td>Juguetes</td>\n",
              "      <td>209600.0</td>\n",
              "      <td>15900.0</td>\n",
              "      <td>15/03/2021</td>\n",
              "      <td>Juan Fernandez</td>\n",
              "      <td>Cartagena</td>\n",
              "      <td>1</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>1</td>\n",
              "      <td>10.39972</td>\n",
              "      <td>-75.51444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Microondas</td>\n",
              "      <td>Electrodomésticos</td>\n",
              "      <td>757500.0</td>\n",
              "      <td>41000.0</td>\n",
              "      <td>03/05/2022</td>\n",
              "      <td>Juan Fernandez</td>\n",
              "      <td>Cali</td>\n",
              "      <td>4</td>\n",
              "      <td>Nequi</td>\n",
              "      <td>1</td>\n",
              "      <td>3.43722</td>\n",
              "      <td>-76.52250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Silla de oficina</td>\n",
              "      <td>Muebles</td>\n",
              "      <td>335200.0</td>\n",
              "      <td>20200.0</td>\n",
              "      <td>07/11/2020</td>\n",
              "      <td>Maria Alfonso</td>\n",
              "      <td>Medellín</td>\n",
              "      <td>5</td>\n",
              "      <td>Nequi</td>\n",
              "      <td>1</td>\n",
              "      <td>6.25184</td>\n",
              "      <td>-75.56359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2354</th>\n",
              "      <td>Iphone 15</td>\n",
              "      <td>Electrónicos</td>\n",
              "      <td>1284400.0</td>\n",
              "      <td>66600.0</td>\n",
              "      <td>15/11/2021</td>\n",
              "      <td>Izabela de León</td>\n",
              "      <td>Medellín</td>\n",
              "      <td>1</td>\n",
              "      <td>Nequi</td>\n",
              "      <td>1</td>\n",
              "      <td>6.25184</td>\n",
              "      <td>-75.56359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2355</th>\n",
              "      <td>Impresora</td>\n",
              "      <td>Electrónicos</td>\n",
              "      <td>282800.0</td>\n",
              "      <td>15300.0</td>\n",
              "      <td>18/03/2023</td>\n",
              "      <td>Lucas Olivera</td>\n",
              "      <td>Bogotá</td>\n",
              "      <td>5</td>\n",
              "      <td>Nequi</td>\n",
              "      <td>1</td>\n",
              "      <td>4.60971</td>\n",
              "      <td>-74.08175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2356</th>\n",
              "      <td>Juego de mesa</td>\n",
              "      <td>Juguetes</td>\n",
              "      <td>122900.0</td>\n",
              "      <td>7200.0</td>\n",
              "      <td>06/07/2021</td>\n",
              "      <td>Lucas Olivera</td>\n",
              "      <td>Cali</td>\n",
              "      <td>5</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>4</td>\n",
              "      <td>3.43722</td>\n",
              "      <td>-76.52250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2357</th>\n",
              "      <td>Cama box</td>\n",
              "      <td>Muebles</td>\n",
              "      <td>691300.0</td>\n",
              "      <td>35000.0</td>\n",
              "      <td>02/05/2022</td>\n",
              "      <td>Pedro Gomez</td>\n",
              "      <td>Pasto</td>\n",
              "      <td>1</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>2</td>\n",
              "      <td>1.21361</td>\n",
              "      <td>-77.28111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2358</th>\n",
              "      <td>Smartwatch</td>\n",
              "      <td>Electrónicos</td>\n",
              "      <td>195000.0</td>\n",
              "      <td>8600.0</td>\n",
              "      <td>18/06/2022</td>\n",
              "      <td>Felipe Santos</td>\n",
              "      <td>Cali</td>\n",
              "      <td>4</td>\n",
              "      <td>Tarjeta de crédito</td>\n",
              "      <td>1</td>\n",
              "      <td>3.43722</td>\n",
              "      <td>-76.52250</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2359 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c1c54cb-84c9-4060-8eda-8d054e0e6d64')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5c1c54cb-84c9-4060-8eda-8d054e0e6d64 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5c1c54cb-84c9-4060-8eda-8d054e0e6d64');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-c51fc643-8d6b-4f1d-9715-a0951a93853e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c51fc643-8d6b-4f1d-9715-a0951a93853e')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-c51fc643-8d6b-4f1d-9715-a0951a93853e button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_f014cb35-b48d-44eb-887d-fd1e8ce207ea\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tienda')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_f014cb35-b48d-44eb-887d-fd1e8ce207ea button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('tienda');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tienda",
              "summary": "{\n  \"name\": \"tienda\",\n  \"rows\": 2359,\n  \"fields\": [\n    {\n      \"column\": \"Producto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"Guitarra ac\\u00fastica\",\n          \"Bal\\u00f3n de baloncesto\",\n          \"Smartwatch\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Categor\\u00eda del Producto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Muebles\",\n          \"Deportes y diversi\\u00f3n\",\n          \"Electr\\u00f3nicos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 614686.7653873172,\n        \"min\": 7600.0,\n        \"max\": 2977000.0,\n        \"num_unique_values\": 1937,\n        \"samples\": [\n          2499400.0,\n          14800.0,\n          80500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Costo de env\\u00edo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32860.0017825605,\n        \"min\": 0.0,\n        \"max\": 160800.0,\n        \"num_unique_values\": 753,\n        \"samples\": [\n          117800.0,\n          54700.0,\n          45600.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fecha de Compra\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1018,\n        \"samples\": [\n          \"15/09/2022\",\n          \"03/06/2020\",\n          \"06/11/2021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vendedor\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Juliana Costa\",\n          \"Mariana Herrera\",\n          \"Pedro Gomez\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Lugar de Compra\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Bogot\\u00e1\",\n          \"Pereira\",\n          \"Neiva\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Calificaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          2,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\\u00e9todo de pago\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Nequi\",\n          \"Tarjeta de d\\u00e9bito\",\n          \"Tarjeta de cr\\u00e9dito\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cantidad de cuotas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 24,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          7,\n          14,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.2874452492678627,\n        \"min\": -4.21528,\n        \"max\": 11.54444,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          4.60971,\n          4.81333,\n          2.9273\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2178272727088486,\n        \"min\": -77.28111,\n        \"max\": -67.9239,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          -74.08175,\n          -75.69611,\n          -75.28189\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ingreso_tienda = sum(tienda['Precio'])\n",
        "ingreso_tienda2 = sum(tienda2['Precio'])\n",
        "ingreso_tienda3 = sum(tienda3['Precio'])\n",
        "ingreso_tienda4 = sum(tienda4['Precio'])\n",
        "\n",
        "print(\"Ingresos por tiendas: \" +chr(10) + 'Tienda Uno: {:,.2f}'.format(ingreso_tienda) )\n",
        "print('Tienda Dos: {:,.2f}'.format(ingreso_tienda2))\n",
        "print('Tienda Tres: {:,.2f}'.format(ingreso_tienda3))\n",
        "print('Tienda Cuatro:{:,.2f}'.format(ingreso_tienda4)+chr(10))\n",
        "\n",
        "preciosxTienda = {\n",
        "    'Tienda Uno': ingreso_tienda,\n",
        "    'Tienda Dos': ingreso_tienda2,\n",
        "    'Tienda Tres': ingreso_tienda3,\n",
        "    'Tienda Cuatro': ingreso_tienda4\n",
        "}\n",
        "\n",
        "#tienda con mayor ingreso\n",
        "nombre_mayor = max(preciosxTienda, key=preciosxTienda.get)\n",
        "\n",
        "print(\"La tienda con mayor Ingreso es: \",  nombre_mayor)\n",
        "\n",
        "#tienda con menor ingreso\n",
        "nombre_menor = min(preciosxTienda, key=preciosxTienda.get)\n",
        "print(\"La tienda con mayor Ingreso es: \",  nombre_menor)"
      ],
      "metadata": {
        "id": "KDyr8E71V3m-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fb501619-b6b5-4cad-8376-7ad6d7cd319f"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingresos por tiendas: \n",
            "Tienda Uno: 1,150,880,400.00\n",
            "Tienda Dos: 1,116,343,500.00\n",
            "Tienda Tres: 1,098,019,600.00\n",
            "Tienda Cuatro:1,038,375,700.00\n",
            "\n",
            "La tienda con mayor Ingreso es:  Tienda Uno\n",
            "La tienda con mayor Ingreso es:  Tienda Cuatro\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 2. Ventas por categoría"
      ],
      "metadata": {
        "id": "2V_vcAPzWZmR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mostrar_ventas_categoria(lista_tienda, nombre_tienda):\n",
        "  print(chr(10) +f\" Informacion de la {nombre_tienda}: \" + chr(10))\n",
        "  print(\"   Cantidad de productos por categoria: \" )\n",
        "\n",
        "  cantidad_produ_categoria = lista_tienda['Categoría del Producto'].value_counts()\n",
        "  categoria_mas_popular = cantidad_produ_categoria.idxmax()\n",
        "  cantidad_mas_popular = cantidad_produ_categoria.max()\n",
        "  for categoria, cantidad in cantidad_produ_categoria.items():\n",
        "    print(f\"    {categoria}: {cantidad}\")\n",
        "  print(f\"\\nLa categoría con más productos es {categoria_mas_popular} con {cantidad_mas_popular} productos.\")\n",
        "\n",
        "mostrar_ventas_categoria(tienda, \"Tienda Uno\")\n",
        "mostrar_ventas_categoria(tienda2, \"Tienda Dos\")\n",
        "mostrar_ventas_categoria(tienda3, \"Tienda Tres\")\n",
        "mostrar_ventas_categoria(tienda4, \"Tienda Cuatro\")\n"
      ],
      "metadata": {
        "id": "A34YupIuYhfF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "537cf3bb-1723-456d-f9eb-9aaa23cfb4ec"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Informacion de la Tienda Uno: \n",
            "\n",
            "   Cantidad de productos por categoria: \n",
            "    Muebles: 465\n",
            "    Electrónicos: 448\n",
            "    Juguetes: 324\n",
            "    Electrodomésticos: 312\n",
            "    Deportes y diversión: 284\n",
            "    Instrumentos musicales: 182\n",
            "    Libros: 173\n",
            "    Artículos para el hogar: 171\n",
            "\n",
            "La categoría con más productos es Muebles con 465 productos.\n",
            "\n",
            " Informacion de la Tienda Dos: \n",
            "\n",
            "   Cantidad de productos por categoria: \n",
            "    Muebles: 442\n",
            "    Electrónicos: 422\n",
            "    Juguetes: 313\n",
            "    Electrodomésticos: 305\n",
            "    Deportes y diversión: 275\n",
            "    Instrumentos musicales: 224\n",
            "    Libros: 197\n",
            "    Artículos para el hogar: 181\n",
            "\n",
            "La categoría con más productos es Muebles con 442 productos.\n",
            "\n",
            " Informacion de la Tienda Tres: \n",
            "\n",
            "   Cantidad de productos por categoria: \n",
            "    Muebles: 499\n",
            "    Electrónicos: 451\n",
            "    Juguetes: 315\n",
            "    Electrodomésticos: 278\n",
            "    Deportes y diversión: 277\n",
            "    Libros: 185\n",
            "    Instrumentos musicales: 177\n",
            "    Artículos para el hogar: 177\n",
            "\n",
            "La categoría con más productos es Muebles con 499 productos.\n",
            "\n",
            " Informacion de la Tienda Cuatro: \n",
            "\n",
            "   Cantidad de productos por categoria: \n",
            "    Muebles: 480\n",
            "    Electrónicos: 451\n",
            "    Juguetes: 338\n",
            "    Deportes y diversión: 277\n",
            "    Electrodomésticos: 254\n",
            "    Artículos para el hogar: 201\n",
            "    Libros: 187\n",
            "    Instrumentos musicales: 170\n",
            "\n",
            "La categoría con más productos es Muebles con 480 productos.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "yZR6cOjXYSk1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 3. Calificación promedio de la tienda\n"
      ],
      "metadata": {
        "id": "Rq6tU_xSY3jk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mostrar_cali_promedio_tienda(lista_tienda, nombre_tienda):\n",
        "    print(chr(10) +f\" Informacion de la {nombre_tienda}: \" + chr(10))\n",
        "    calificacion_promedio = sum(lista_tienda['Calificación']) / len(lista_tienda)\n",
        "    print(\"Calificacion promedio: \", calificacion_promedio)\n",
        "\n",
        "mostrar_cali_promedio_tienda(tienda, \"Tienda Uno\")\n",
        "mostrar_cali_promedio_tienda(tienda2, \"Tienda Dos\")\n",
        "mostrar_cali_promedio_tienda(tienda3, \"Tienda Tres\")\n",
        "mostrar_cali_promedio_tienda(tienda4, \"Tienda Cuatro\")\n",
        "\n"
      ],
      "metadata": {
        "id": "bh3jjjJwY5MU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ae0ddc25-7566-4729-a2a9-942879630949"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Informacion de la Tienda Uno: \n",
            "\n",
            "Calificacion promedio:  3.976685036032217\n",
            "\n",
            " Informacion de la Tienda Dos: \n",
            "\n",
            "Calificacion promedio:  4.037303942348453\n",
            "\n",
            " Informacion de la Tienda Tres: \n",
            "\n",
            "Calificacion promedio:  4.048325561678677\n",
            "\n",
            " Informacion de la Tienda Cuatro: \n",
            "\n",
            "Calificacion promedio:  3.9957591178965224\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "I0KkjPoTY88F"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 4. Productos más y menos vendidos"
      ],
      "metadata": {
        "id": "DmNp1KPBZCm-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mostrar_producto_masymenos_vendido(lista_tienda, nombre_tienda):\n",
        "  print(chr(10) +f\" Informacion de la {nombre_tienda}: \" )\n",
        "  cantidad_produ_categoria = lista_tienda['Categoría del Producto'].value_counts()\n",
        "  categoria_mas_popular = cantidad_produ_categoria.idxmax()\n",
        "  cantidad_mas_popular = cantidad_produ_categoria.max()\n",
        "\n",
        "  categoria_menos_popular = cantidad_produ_categoria.idxmin()\n",
        "  cantidad_menos_popular = cantidad_produ_categoria.min()\n",
        "\n",
        "  print(f\"\\n  Productos mas vendido es: {categoria_mas_popular} con {cantidad_mas_popular} productos.\")\n",
        "  print(f\"\\n  Productos menos vendido es: {categoria_menos_popular} con {cantidad_menos_popular} productos.\")\n",
        "\n",
        "mostrar_producto_masymenos_vendido(tienda, \"Tienda Uno\")\n",
        "mostrar_producto_masymenos_vendido(tienda2, \"Tienda Dos\")\n",
        "mostrar_producto_masymenos_vendido(tienda3, \"Tienda Tres\")\n",
        "mostrar_producto_masymenos_vendido(tienda4, \"Tienda Cuatro\")"
      ],
      "metadata": {
        "id": "qoyjqijQZHfF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "85cefecd-6248-4cb5-d9e2-8c896a629898"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Informacion de la Tienda Uno: \n",
            "\n",
            "  Productos mas vendido es: Muebles con 465 productos.\n",
            "\n",
            "  Productos menos vendido es: Artículos para el hogar con 171 productos.\n",
            "\n",
            " Informacion de la Tienda Dos: \n",
            "\n",
            "  Productos mas vendido es: Muebles con 442 productos.\n",
            "\n",
            "  Productos menos vendido es: Artículos para el hogar con 181 productos.\n",
            "\n",
            " Informacion de la Tienda Tres: \n",
            "\n",
            "  Productos mas vendido es: Muebles con 499 productos.\n",
            "\n",
            "  Productos menos vendido es: Instrumentos musicales con 177 productos.\n",
            "\n",
            " Informacion de la Tienda Cuatro: \n",
            "\n",
            "  Productos mas vendido es: Muebles con 480 productos.\n",
            "\n",
            "  Productos menos vendido es: Instrumentos musicales con 170 productos.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0Sw3sd4IZIGW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 5. Envío promedio por tienda"
      ],
      "metadata": {
        "id": "Fl0cGi3bZKqU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mostrar_costo_envio_promedio_tienda(lista_tienda, nombre_tienda):\n",
        "    print(chr(10) +f\" Informacion de la {nombre_tienda}: \" + chr(10))\n",
        "    costo_promedio = sum(lista_tienda['Costo de envío']) / len(lista_tienda)\n",
        "    print(\"Costo de envio promedio: \", costo_promedio)\n",
        "\n",
        "mostrar_costo_envio_promedio_tienda(tienda, \"Tienda Uno\")\n",
        "mostrar_costo_envio_promedio_tienda(tienda2, \"Tienda Dos\")\n",
        "mostrar_costo_envio_promedio_tienda(tienda3, \"Tienda Tres\")\n",
        "mostrar_costo_envio_promedio_tienda(tienda4, \"Tienda Cuatro\")"
      ],
      "metadata": {
        "id": "S2JeaCykZNy9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fc92663d-a11c-417b-bc05-40268af85ea9"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Informacion de la Tienda Uno: \n",
            "\n",
            "Costo de envio promedio:  26018.60958033065\n",
            "\n",
            " Informacion de la Tienda Dos: \n",
            "\n",
            "Costo de envio promedio:  25216.235693090293\n",
            "\n",
            " Informacion de la Tienda Tres: \n",
            "\n",
            "Costo de envio promedio:  24805.680373039424\n",
            "\n",
            " Informacion de la Tienda Cuatro: \n",
            "\n",
            "Costo de envio promedio:  23459.457167090754\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0tSdCie9ZQlt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib import pyplot as plt\n",
        "\n",
        "nombre_tienda = list(preciosxTienda.keys())\n",
        "ingreso = list(preciosxTienda.values())\n",
        "\n",
        "plt.bar(nombre_tienda, ingreso, color='skyblue')\n",
        "plt.xlabel('Nombre Tienda')\n",
        "plt.ylabel('Ingreso Total')\n",
        "plt.title('Ingreso total por tienda')\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.9)\n",
        "\n",
        "# Mostrar los valores encima de cada barra\n",
        "for i, valor in enumerate(ingreso):\n",
        "    plt.text(i, valor , f\"{valor:,.2f}\", ha='center', va='bottom')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "j--c4Q7qb5UG",
        "outputId": "ac05a030-6157-40d7-cf95-3e1f6a22710e"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def devuelve_cali_promedio_tienda(listatienda):\n",
        "    valor = sum(listatienda['Calificación']) / len(listatienda)\n",
        "    return valor\n",
        "\n",
        "calificacion_promedio_tienda = [devuelve_cali_promedio_tienda(tienda), devuelve_cali_promedio_tienda(tienda2),devuelve_cali_promedio_tienda(tienda3),devuelve_cali_promedio_tienda(tienda4)]\n",
        "nombre_tienda = list(preciosxTienda.keys())\n",
        "\n",
        "plt.bar(nombre_tienda, calificacion_promedio_tienda, color='mediumseagreen', edgecolor='blue')\n",
        "\n",
        "plt.xlabel('Tiendas')\n",
        "plt.ylabel('Promedio de Calificación')\n",
        "plt.title('Promedio de Calificaciones por Tienda')\n",
        "plt.ylim(0, 5)\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.8)\n",
        "\n",
        "# Mostrar los valores encima de cada barra\n",
        "for i, valor in enumerate(calificacion_promedio_tienda):\n",
        "    plt.text(i, valor + 0.05, f\"{valor:.2f}\", ha='center', va='bottom')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "eaLsbat-ejEr",
        "outputId": "707ee7fe-e514-4af2-9df1-2b23fa4e10eb"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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iUtS4RvMbSFKbAfup7rZp9tCKGMEqNoxoriyxtjVq1pkX9PyXN16xPRc3aodI8qLS8Wr4ArUWmFX9H1zxY0ZMwatW7fGyy+/XObArw08Mb5+4hVtRFQf8QIbqopaK+zM+b65uoa/bERERFSX8aZbRERERCpR67c7KW7Pnj21nQIRERFRvcUZOyIiIiKVYGFHREREpBIs7IiIiIhUgoUdERERkUqwsCMiIiJSCRZ2RERERCrBwo6IiIhIJVjYEREREakECzsiIiIilWBhR0RERKQSLOyIiIiIVIKFHREREZFKsLAjIiIiUgkWdkREREQqwcKOiIiISCVY2BERERGpBAs7IiIiIpVgYUdERESkEizsiIiIiFSChR0RERGRSrCwIyIiIlIJFnZEREREKsHCjoiIiEglWNgRERERqYSuMi/KysrCb7/9hvT0dMiybPLcM888Uy2JEREREZFlLC7stm7dipEjRyI3NxdOTk6QJEl5TpIkFnZEREREtcTij2KnTZuGsWPHIjc3F1lZWbh27Zryc/Xq1ZrIkYiIiIjMYHFhd+nSJURFRcHOzq4m8iEiIiKiSrK4sAsPD8fhw4drIhciIiIiqgKLz7Hr168fpk+fjj/++APt27eHlZWVyfMDBgyotuSIiIiIyHwWF3bjxo0DALz22mslnpMkCUajsepZEREREZHFLC7s7ry9CRERERHVDbxBMREREZFKVKqw27t3L/r374+WLVuiZcuWGDBgAH755Zfqzo2IiIiILFBhYbd7927k5uYqjz///HP06tULdnZ2iIqKQlRUFGxtbfHII4/giy++qNFkiYiIiKhsFRZ2ycnJ6NatG9LS0gAACxYswFtvvYV169Yphd26devw5ptv4vXXX6/xhImIiIiodBUWdpGRkZgxYwZ69eoFoLDQ69+/f4l2AwYMQHJycvVnSERERERmMescuxEjRmDz5s0AAC8vL8TGxpZos2vXLnh5eVVvdkRERERkNrNvd9KqVSsAhd8VGxUVhfj4eHTt2hUAsG/fPqxevRrLly+vmSyJiIiIqEIW38duwoQJcHd3x+LFi/H1118DANq0aYN169Zh4MCB1Z4gEREREZnH4sIOAAYPHozBgwdXdy5EREREVAW8QTERERGRSpg1Y+fq6oo///wTjRo1QoMGDSBJUpltr169Wm3JEREREZH5zCrsli5d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f/0FoPAqXFtb2wpeTURERETFVeoGxQaDAbt27cKXX36pVJGXL19Gbm6uRcv54IMPkJ2djZ49e8LDw0P5WbduXWXSIiIiIrqnWTxjd/78eTz66KNITU1FQUEBevfuDUdHRyxcuBAFBQVYsWKF2cuy8PQ+IiIiIiqHxTN2kyZNQnBwMK5du2bycengwYMRGxtbrckRERERkfksnrH75ZdfsH//flhbW5vEfXx8cOnSpWpLjIiIiIgsY/GMnSzLJS7FBYCLFy/C0dGxWpIiIiIiIstZXNj16dMHy5YtUx5LkoTc3FzMnTsXERER1ZkbEREREVnA4o9iFy9ejPDwcLRt2xb5+fl48skncfbsWTRq1AhffvllTeRIRERERGawuLBr1qwZjh07hq+++goJCQnIzc1FZGQkRo4cyXvPEREREdUiiws7oPCuyE899VR150JEREREVVCpwu7y5cuIi4tDenq6yffgAUBUVFS1JEZERERElrG4sFu9ejX+/e9/w9raGg0bNjT5/jJJkljYEREREdUSiwu72bNnY86cOXjllVdK/XJjIiIiIqodFldmeXl5GD58OIs6IiIiojrG4uosMjIS69evr4lciIiIiKgKLP4oNiYmBo899hh27NiB9u3bw8rKyuT5JUuWVFtyRERERGS+ShV2O3fuREBAAACUuHiCiIiIiGpHpb554pNPPsHo0aNrIB0iIiIiqiyLz7HT6/UIDQ2tiVyIiIiIqAosLuwmTZqEd999tyZyISIiIqIqsPij2N9++w27d+/Gd999h3bt2pW4eGLTpk3VlhwRERERmc/iws7FxQVDhgypiVyIiIiIqAosLuxWrVpVE3kQERERURVZXNgV+fvvv3HmzBkAQEBAABo3blxtSRERERGR5Sy+eOLGjRsYO3YsPDw80L17d3Tv3h2enp6IjIxEXl5eTeRIRERERGawuLCbOnUq9u7di61btyIrKwtZWVn45ptvsHfvXkybNq0mciQiIiIiM1j8UezGjRuxYcMG9OzZU4lFRETA1tYWw4YNwwcffFCd+RERERGRmSyescvLy0OTJk1KxN3c3PhRLBEREVEtsriwCwkJwdy5c5Gfn6/Ebt68ifnz5yMkJKRakyMiIiIi81n8UeyyZcvw6KOPolmzZujQoQMA4NixY7CxscHOnTurPUEiIiIiMo/FhV379u1x9uxZ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hR0RERGRSrCwIyIiIlIJFnZEREREKsHCjoiIiEglWNgRERERqQQLOyIiIiKVYGFHREREpBIs7IiIiIhUgoUdERERkUqwsCMiIiJSCRZ2RERERCrBwo6IiIhIJVjYEREREakECzsiIiIilWBhR0RERKQSLOyIiIiIVIKFHREREZFKsLAjIiIiUgkWdkREREQqwcKOiIiISCVY2BERERGpBAs7IiIiIpVgYUdERESkEizsiIiIiFSChR0RERGRSrCwIyIiIlIJFnZEREREKsHCjoiIiEglWNgRERERqQQLOyIiIiKVYGFHREREpBIs7IiIiIhUgoUdERERkUqwsCMiIiJSCRZ2RERERCrBwo6IiIhIJVjYEREREakECzsiIiIilWBhR0RERKQSLOyIiIiIVIKFHREREZFKsLAjIiIiUgkWdkREREQqwcKOiIiISCVY2BERERGpBAs7IiIiIpVgYUdERESkEizsiIiIiFSChR0RERGRSrCwIyIiIlIJFnZEREREKsHCjoiIiEglWNgRERERqQQLOyIiIiKVYGFHREREpBIs7IiIiIhUgoUdERERkUrUicLuP//5D3x8fGBjY4MuXbrgt99+q+2UiIiIiOqdWi/s1q1bh6lTp2Lu3Lk4cuQIOnTogPDwcKSnp9d2akRERET1Sq0XdkuWLMG4ceMwZswYtG3bFitWrICdnR0++eST2k6NiIiIqF6p1cLu1q1b+P3339GrVy8lptFo0KtXLxw4cKAWMyMiIiKqf3S1ufKMjAwYjUY0adLEJN6kSROcPn26RPuCggIUFBQoj7OzswEAV69ehcFgAABIkgStVguj0QghhNJWo9FAo9GUGS96fRGtVgtJkmAwGJCTA1hbA/nJTpDz8yEAWEmSSfvbQkACoLMgrgGgLRYXAAxCQAtAUywuCwEjUGZcJ0kovnSjEJBLydEgRKm5lxWv7326cckJ1tZXkZMDXL1aGNdqtYXLMxpN2ut0OgghSo3LsgxZlpVY0RgrHs/JAbRaCdeTnID8fO6netCngsum46Mqx4g740DJMXb9emE8P9kJmmLHMe6nutun/GJjJCenaseI4vGyxlhOjhHW1kIZI9xPdb9P+ZedoNFkITdXg6tXq3aMKO/9qajeKT5uyiRq0aVLlwQAsX//fpP49OnTRefOnUu0nzt3rvjfvuAPf/jDH/7whz/8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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def devuelve_envio_promedio_tienda(listatienda):\n",
        "    return sum(listatienda['Costo de envío']) / len(listatienda)\n",
        "\n",
        "envio_promedio_tienda = [devuelve_envio_promedio_tienda(tienda), devuelve_envio_promedio_tienda(tienda2),devuelve_envio_promedio_tienda(tienda3),devuelve_envio_promedio_tienda(tienda4)]\n",
        "nombre_tienda = list(preciosxTienda.keys())\n",
        "\n",
        "#plt.bar(nombre_tienda, envio_promedio_tienda, color='mediumseagreen', edgecolor='blue')\n",
        "plt.scatter(nombre_tienda, envio_promedio_tienda,  color='red', edgecolor='black')\n",
        "plt.xlabel('Tiendas')\n",
        "plt.ylabel('Promedio de Costo de Envio')\n",
        "plt.title('Promedio de Costo de Envio por Tienda')\n",
        "#plt.ylim(0, 5)\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.8)\n",
        "\n",
        "# Mostrar los valores encima de cada barra\n",
        "for i, valor in enumerate(envio_promedio_tienda):\n",
        "    plt.text(i, valor + 0.05, f\"{valor:.2f}\", ha='center', va='bottom')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "QHVJ793ioib8",
        "outputId": "f42c861a-81d8-4dcc-dfd1-43d51a9742c6"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
